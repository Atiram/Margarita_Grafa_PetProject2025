name: Clinic Service

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
                             
    env:
      Solution_Name: Margarita_Grafa_PetProject2025.sln  
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4      
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner
        
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          EXCLUDE_FROM_COVERAGE: "**/Quickstart/**/*,**/program.cs"
          EXCLUDE_FROM_ANALYS: "**/Quickstart/**/*"
      run: 
        dotnet-sonarscanner begin /k:"Margarita_Grafa_PetProject2025" /o:"Atiram" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.coverage.exclusions="${{ env.EXCLUDE_FROM_COVERAGE }}" /d:sonar.exclusions="${{ env.EXCLUDE_FROM_ANALYS }}"
        dotnet build --configuration Debug
    - name: Test
      run: dotnet test ${{ env.Solution_Name }} --configuration Debug --no-build
           dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
           
